#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>

void config_pwm() {
	DDRB |= (1 << DDB1) | (1 << DDB2);

	TCCR1A |= (1 << WGM11) | (1 << COM1A1) | (1 << COM1B1);
	TCCR1B |= (1 << WGM13) | (1 << WGM12) | (1 << CS11) | (1 << CS10);  // Modo Fast PWM y prescaler = 64
}

uint32_t fpwm(uint8_t frecuencia) {
	return (F_CPU / (frecuencia * 64UL)) - 1;//ecuaciÃ³n de icr1 para determinada frecuencia
}

int main(void) {
	config_pwm();
	while (1) {
//Incrementar frecuencia del pwm PB1
for (uint8_t f = 10; f <= 120; f++) {
	ICR1 = fpwm(f);
	OCR1A = ICR1/2;//Duty cicle de 50%
	OCR1B = 0;
	_delay_ms(50);
}
//Decrementar frecuencia del pwm PB2
for (uint8_t f = 120; f >= 10; f--) {
	ICR1 = fpwm(f);
	OCR1A = 0;
	OCR1B = ICR1/2;//Duty cicle de 50%
	_delay_ms(50);
}
}
}